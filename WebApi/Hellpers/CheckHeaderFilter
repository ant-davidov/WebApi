using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Mvc.Filters;
using WebApi.Interfaces;

namespace WebApi.Hellpers
{
    public class CheckHeaderFilter :IAsyncResourceFilter
{   private readonly IUnitOfWork _unitOfWork;
    public  CheckHeaderFilter(IUnitOfWork unitOfWork)
    {
        _unitOfWork = unitOfWork;
    }

    public void OnResourceExecuted(ResourceExecutedContext context) { }

        public async Task OnResourceExecutionAsync(ResourceExecutingContext context, ResourceExecutionDelegate next)
        {
             if (!context.HttpContext.Request.Headers.ContainsKey("Authorization"))
                await next();
            string headerKey = context.HttpContext.Request.Headers["Authorization"];
            if (String.IsNullOrWhiteSpace(headerKey)) 
                 context.Result = new UnauthorizedResult();
            byte[] bytes = Convert.FromBase64String(headerKey);
            string credentials = Encoding.UTF8.GetString(bytes);
            if(string.IsNullOrWhiteSpace(credentials)) 
                context.Result = new UnauthorizedResult();
            
            string[] array = credentials.Split(":");
            string email = array[0].Trim();
            string password = array[1].Trim();
            var user = await _unitOfWork.AccountRepository.GetAccountByEmailAndPasswordAsync(email, password);
            if (user == null) 
                context.Result = new UnauthorizedResult();
            await next();
        }
    }

   
}